sub dotriplet_noij{#if($net{"true"}{$k[$i]}{$k[$j]}) then $net{"true"}{$k[$i]}{$k[$l]} && $net0{"true"}{$k[$j]}{$k[$l]} && $net0{"true"}{$k[$l]}{$k[$j]} && $net0{"true"}{$k[$j]}{$k[$i]} && $net0{"true"}{$k[$l]}{$k[$i]}
	if($_[6] ne $_[7] && $_[5] ne $_[6] && $_[5] ne $_[7]){
		if($_[0] == 1 && $_[1] == 0 && $_[2] == 0 && $_[3] == 0 && $_[4] == 0){#type 1
			return (0,$_[5],$_[6],$_[7]);
		}
		elsif($_[0] == 0 && $_[1] == 0 && $_[2] == 0 && $_[3] == 0 && $_[4] == 1){#type 2
			return (1,$_[5],$_[6],$_[7]);
		}
		elsif($_[0] == 1 && $_[1] == 0 && $_[2] == 0 && $_[3] == 1 && $_[4] == 0){#type 3
			return (2,$_[5],$_[6],$_[7]);
		}
		elsif($_[0] == 0 && $_[1] == 0 && $_[2] == 1 && $_[3] == 0 && $_[4] == 0){#type 4
			return (3,$_[5],$_[6],$_[7]);
		}
		elsif($_[0] == 1 && $_[1] == 1 && $_[2] == 0 && $_[3] == 0 && $_[4] == 0){#type 5
			return (4,$_[5],$_[6],$_[7]);
		}
		elsif($_[0] == 1 && $_[1] == 1 && $_[2] == 0 && $_[3] == 1 && $_[4] == 0){#type 6
			return (5,$_[5],$_[6],$_[7]);
		}
		elsif($_[0] == 0 && $_[1] == 0 && $_[2] == 0 && $_[3] == 1 && $_[4] == 1){#type 7
			return (6,$_[5],$_[6],$_[7]);
		}
		elsif($_[0] == 1 && $_[1] == 0 && $_[2] == 0 && $_[3] == 1 && $_[4] == 1){#type 8
			return (7,$_[5],$_[6],$_[7]);
		}
		elsif($_[0] == 0 && $_[1] == 1 && $_[2] == 0 && $_[3] == 0 && $_[4] == 1){#type 9
			return (8,$_[5],$_[6],$_[7]);
		}
		elsif($_[0] == 1 && $_[1] == 0 && $_[2] == 1 && $_[3] == 1 && $_[4] == 0){#type 10
			return (9,$_[5],$_[6],$_[7]);
		}
		elsif($_[0] == 1 && $_[1] == 1 && $_[2] == 1 && $_[3] == 0 && $_[4] == 0){#type 11
			return (10,$_[5],$_[6],$_[7]);
		}
		elsif($_[0] == 1 && $_[1] == 0 && $_[2] == 1 && $_[3] == 1 && $_[4] == 1){#type 12
			return (11,$_[5],$_[6],$_[7]);
		}
		elsif($_[0] == 1 && $_[1] == 1 && $_[2] == 1 && $_[3] == 1 && $_[4] == 1){#type 13
			return (12,$_[5],$_[6],$_[7]);
		}
	}
}
